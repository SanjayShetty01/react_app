{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\react-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst countries = [{\n  name: 'Finland',\n  city: 'Helsinki'\n}, {\n  name: 'Sweden',\n  city: 'Stockholm'\n}, {\n  name: 'Denmark',\n  city: 'Copenhagen'\n}, {\n  name: 'Norway',\n  city: 'Oslo'\n}, {\n  name: 'Iceland',\n  city: 'Reykjavík'\n}];\n\n// Country component\nconst Country = _ref => {\n  let {\n    country: {\n      name,\n      city\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      children: city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n// countries component\n_c = Country;\nconst Countries = _ref2 => {\n  let {\n    countries\n  } = _ref2;\n  const countryList = countries.map(country => /*#__PURE__*/_jsxDEV(Country, {\n    country: country\n  }, country.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: countryList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n_c2 = Countries;\nconst App = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"container\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Countries List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Countries, {\n      countries: countries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this);\n_c3 = App;\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 17\n}, this), rootElement);\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Country\");\n$RefreshReg$(_c2, \"Countries\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","ReactDOM","jsxDEV","_jsxDEV","countries","name","city","Country","_ref","country","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Countries","_ref2","countryList","map","_c2","App","className","_c3","rootElement","document","getElementById","render","$RefreshReg$"],"sources":["D:/Github/react-app/src/index.js"],"sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nconst countries = [\n  { name: 'Finland', city: 'Helsinki' },\n  { name: 'Sweden', city: 'Stockholm' },\n  { name: 'Denmark', city: 'Copenhagen' },\n  { name: 'Norway', city: 'Oslo' },\n  { name: 'Iceland', city: 'Reykjavík' },\n]\n\n// Country component\nconst Country = ({ country: { name, city } }) => {\n  return (\n    <div>\n      <h1>{name}</h1>\n      <small>{city}</small>\n    </div>\n  )\n}\n\n// countries component\nconst Countries = ({ countries }) => {\n  const countryList = countries.map((country) => (\n    <Country key={country.name} country={country} />\n  ))\n  return <div>{countryList}</div>\n}\nconst App = () => (\n  <div className='container'>\n    <div>\n      <h1>Countries List</h1>\n      <Countries countries={countries} />\n    </div>\n  </div>\n)\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,SAAS,GAAG,CAChB;EAAEC,IAAI,EAAE,SAAS;EAAEC,IAAI,EAAE;AAAW,CAAC,EACrC;EAAED,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAY,CAAC,EACrC;EAAED,IAAI,EAAE,SAAS;EAAEC,IAAI,EAAE;AAAa,CAAC,EACvC;EAAED,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAO,CAAC,EAChC;EAAED,IAAI,EAAE,SAAS;EAAEC,IAAI,EAAE;AAAY,CAAC,CACvC;;AAED;AACA,MAAMC,OAAO,GAAGC,IAAA,IAAiC;EAAA,IAAhC;IAAEC,OAAO,EAAE;MAAEJ,IAAI;MAAEC;IAAK;EAAE,CAAC,GAAAE,IAAA;EAC1C,oBACEL,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAKL;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACfX,OAAA;MAAAO,QAAA,EAAQJ;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjB;AAEV,CAAC;;AAED;AAAAC,EAAA,GATMR,OAAO;AAUb,MAAMS,SAAS,GAAGC,KAAA,IAAmB;EAAA,IAAlB;IAAEb;EAAU,CAAC,GAAAa,KAAA;EAC9B,MAAMC,WAAW,GAAGd,SAAS,CAACe,GAAG,CAAEV,OAAO,iBACxCN,OAAA,CAACI,OAAO;IAAoBE,OAAO,EAAEA;EAAQ,GAA/BA,OAAO,CAACJ,IAAI;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC3B,CAAC;EACF,oBAAOX,OAAA;IAAAO,QAAA,EAAMQ;EAAW;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;AACjC,CAAC;AAAAM,GAAA,GALKJ,SAAS;AAMf,MAAMK,GAAG,GAAGA,CAAA,kBACVlB,OAAA;EAAKmB,SAAS,EAAC,WAAW;EAAAZ,QAAA,eACxBP,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACvBX,OAAA,CAACa,SAAS;MAACZ,SAAS,EAAEA;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAC/B;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAET;AAAAS,GAAA,GAPKF,GAAG;AAST,MAAMG,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AACnDzB,QAAQ,CAAC0B,MAAM,eAACxB,OAAA,CAACkB,GAAG;EAAAV,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAG,EAAEU,WAAW,CAAC;AAAA,IAAAT,EAAA,EAAAK,GAAA,EAAAG,GAAA;AAAAK,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAR,GAAA;AAAAQ,YAAA,CAAAL,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}